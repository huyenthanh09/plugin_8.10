import { __assign } from "tslib";
// (C) 2022 GoodData Corporation
import { insightProperties } from "@gooddata/sdk-model";
import filter from "lodash/fp/filter";
import flow from "lodash/fp/flow";
import fromPairs from "lodash/fromPairs";
import isNil from "lodash/isNil";
import toPairs from "lodash/toPairs";
var supportedGeoConfigProperties = new Set([
    "center",
    "colorMapping",
    "cooperativeGestures",
    "legend",
    "limit",
    "selectedSegmentItems",
    "separators",
    "viewport",
    "points",
    "showLabels",
]);
export function geoConfigFromInsight(insight, ctx) {
    var _a, _b, _c;
    var properties = insightProperties(insight);
    var controls = (_a = properties === null || properties === void 0 ? void 0 : properties.controls) !== null && _a !== void 0 ? _a : {};
    var withValuesFromContext = __assign(__assign({}, controls), (((_b = ctx === null || ctx === void 0 ? void 0 : ctx.settings) === null || _b === void 0 ? void 0 : _b.separators) ? { separators: (_c = ctx === null || ctx === void 0 ? void 0 : ctx.settings) === null || _c === void 0 ? void 0 : _c.separators } : {}));
    return flow(toPairs, filter(function (_a) {
        var key = _a[0], value = _a[1];
        return supportedGeoConfigProperties.has(key) && !isNil(value);
    }), fromPairs)(withValuesFromContext);
}
//# sourceMappingURL=geoConfigFromInsight.js.map