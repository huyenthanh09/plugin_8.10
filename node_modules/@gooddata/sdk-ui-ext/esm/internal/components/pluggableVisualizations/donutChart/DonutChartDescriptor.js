import { __extends } from "tslib";
import { BucketNames } from "@gooddata/sdk-ui";
import { PluggableDonutChart } from "./PluggableDonutChart";
import { BaseChartDescriptor } from "../baseChart/BaseChartDescriptor";
import { filtersInsightConversion, getInsightToPropsConverter, getReactEmbeddingCodeGenerator, multipleAttributesOrMeasuresBucketConversion, singleAttributeBucketConversion, sortsInsightConversion, } from "../../../utils/embeddingCodeGenerator";
import { chartAdditionalFactories, chartConfigInsightConversion } from "../chartCodeGenUtils";
var DonutChartDescriptor = /** @class */ (function (_super) {
    __extends(DonutChartDescriptor, _super);
    function DonutChartDescriptor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getEmbeddingCode = getReactEmbeddingCodeGenerator({
            component: {
                importType: "named",
                name: "DonutChart",
                package: "@gooddata/sdk-ui-charts",
            },
            insightToProps: getInsightToPropsConverter({
                measures: multipleAttributesOrMeasuresBucketConversion("measures", BucketNames.MEASURES),
                viewBy: singleAttributeBucketConversion("viewBy", BucketNames.VIEW),
                filters: filtersInsightConversion("filters"),
                sortBy: sortsInsightConversion("sortBy"),
                config: chartConfigInsightConversion("config"),
            }),
            additionalFactories: chartAdditionalFactories,
        });
        return _this;
    }
    DonutChartDescriptor.prototype.getFactory = function () {
        return function (params) { return new PluggableDonutChart(params); };
    };
    return DonutChartDescriptor;
}(BaseChartDescriptor));
export { DonutChartDescriptor };
//# sourceMappingURL=DonutChartDescriptor.js.map