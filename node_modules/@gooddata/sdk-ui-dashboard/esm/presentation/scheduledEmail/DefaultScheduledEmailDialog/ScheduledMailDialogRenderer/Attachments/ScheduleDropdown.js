// (C) 2022 GoodData Corporation
import * as React from "react";
import cx from "classnames";
import { Dropdown, Button } from "@gooddata/sdk-ui-kit";
import { injectIntl } from "react-intl";
import { withTheme } from "@gooddata/sdk-ui-theme-provider";
import { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX } from "../../constants";
export var ScheduleDropdownComponent = function (props) {
    var title = props.title, applyDisabled = props.applyDisabled, intl = props.intl, onApply = props.onApply, onCancel = props.onCancel, iconComponent = props.iconComponent, contentComponent = props.contentComponent, buttonClassName = props.buttonClassName, bodyClassName = props.bodyClassName;
    var renderBody = function (closeDropdown) {
        return (React.createElement("div", { className: "gd-dropdown overlay" },
            React.createElement("div", { className: cx("gd-schedule-dropdown-body", bodyClassName) },
                renderBodyHeader(),
                renderBodyContentWrapper(),
                renderBodyFooter(closeDropdown))));
    };
    var renderBodyHeader = function () {
        return (React.createElement("div", { className: "gd-schedule-dropdown-header" },
            React.createElement("span", null, title)));
    };
    var renderBodyContentWrapper = function () {
        return React.createElement("div", { className: "gd-schedule-dropdown-content" }, contentComponent);
    };
    var renderBodyFooter = function (closeDropdown) {
        var cancelText = intl.formatMessage({ id: "gs.list.cancel" });
        var applyText = intl.formatMessage({ id: "gs.list.apply" });
        return (React.createElement("div", { className: "gd-schedule-dropdown-footer" },
            React.createElement(Button, { className: "gd-button-secondary gd-button-small", value: cancelText, onClick: function () {
                    onCancel === null || onCancel === void 0 ? void 0 : onCancel();
                    closeDropdown();
                } }),
            React.createElement(Button, { className: "gd-button-action gd-button-small", disabled: applyDisabled, value: applyText, onClick: function () {
                    onApply === null || onApply === void 0 ? void 0 : onApply();
                    closeDropdown();
                } })));
    };
    return (React.createElement(Dropdown, { overlayPositionType: "sameAsTarget", alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, overlayZIndex: DEFAULT_DROPDOWN_ZINDEX, ignoreClicksOnByClass: [
            ".s-format-options-dropdown-ignore",
            ".s-format-options-dropdown-content-ignore",
        ], renderButton: function (_a) {
            var toggleDropdown = _a.toggleDropdown;
            return (React.createElement("a", { className: cx("gd-schedule-dropdown-button", buttonClassName), target: "_blank", rel: "noopener noreferrer", onClick: toggleDropdown },
                iconComponent && React.createElement("div", { className: "gd-schedule-dropdown-button-icon" }, iconComponent),
                title));
        }, renderBody: function (_a) {
            var closeDropdown = _a.closeDropdown;
            return renderBody(closeDropdown);
        } }));
};
export var ScheduleDropdown = injectIntl(withTheme(ScheduleDropdownComponent));
//# sourceMappingURL=ScheduleDropdown.js.map