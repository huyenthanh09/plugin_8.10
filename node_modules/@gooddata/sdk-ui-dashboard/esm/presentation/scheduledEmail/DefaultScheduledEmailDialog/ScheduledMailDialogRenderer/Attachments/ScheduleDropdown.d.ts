import * as React from "react";
import { WrappedComponentProps } from "react-intl";
import { ITheme } from "@gooddata/sdk-backend-spi";
export interface IScheduleDropdownOwnProps {
    title: string;
    applyDisabled?: boolean;
    theme?: ITheme;
    iconComponent?: React.ReactNode;
    onApply?: () => void;
    onCancel?: () => void;
    contentComponent?: React.ReactNode;
    buttonClassName?: string;
    bodyClassName?: string;
}
declare type IScheduleDropdownProps = IScheduleDropdownOwnProps & WrappedComponentProps;
export declare const ScheduleDropdownComponent: React.FC<IScheduleDropdownProps>;
export declare const ScheduleDropdown: React.FC<import("react-intl").WithIntlProps<Pick<IScheduleDropdownProps, "title" | "intl" | "onCancel" | "onApply" | "applyDisabled" | "iconComponent" | "contentComponent" | "buttonClassName" | "bodyClassName">>> & {
    WrappedComponent: React.ComponentType<Pick<IScheduleDropdownProps, "title" | "intl" | "onCancel" | "onApply" | "applyDisabled" | "iconComponent" | "contentComponent" | "buttonClassName" | "bodyClassName">>;
};
export {};
//# sourceMappingURL=ScheduleDropdown.d.ts.map