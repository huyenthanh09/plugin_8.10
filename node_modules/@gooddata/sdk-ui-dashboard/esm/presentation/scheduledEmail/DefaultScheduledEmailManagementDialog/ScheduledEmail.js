// (C) 2022 GoodData Corporation
import { __read, __spread } from "tslib";
import React from "react";
import { FormattedMessage, useIntl } from "react-intl";
import { Bubble, BubbleHoverTrigger, ShortenedText } from "@gooddata/sdk-ui-kit";
import { useTheme } from "@gooddata/sdk-ui-theme-provider";
import { getAttachmentType, getFormatsLabel, getRecipientsLabel } from "./utils";
var ICON_TOOLTIP_ALIGN_POINTS = [{ align: "cr cl", offset: { x: 0, y: 0 } }];
var TEXT_TOOLTIP_ALIGN_POINTS = [{ align: "tc bc", offset: { x: 0, y: 0 } }];
export var ScheduledEmail = function (props) {
    var _a, _b;
    var intl = useIntl();
    var theme = useTheme();
    var scheduledEmail = props.scheduledEmail, currentUserEmail = props.currentUserEmail, onDelete = props.onDelete;
    var subject = scheduledEmail.subject, to = scheduledEmail.to, bcc = scheduledEmail.bcc, attachments = scheduledEmail.attachments;
    var recipients = __spread(to, (bcc !== null && bcc !== void 0 ? bcc : []));
    var recipientsLabel = getRecipientsLabel(intl, recipients, currentUserEmail);
    var formatsLabel = getFormatsLabel(attachments);
    var _c = getAttachmentType(intl, attachments), AttachmentIcon = _c.AttachmentIcon, attachmentLabel = _c.attachmentLabel;
    var subtitle = recipientsLabel + " \u2022 " + attachmentLabel + " \u2022 " + formatsLabel;
    return (React.createElement("div", { className: "gd-scheduled-email s-scheduled-email" },
        React.createElement("div", { className: "gd-scheduled-email-delete" },
            React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },
                React.createElement("span", { className: "gd-scheduled-email-delete-icon s-scheduled-email-delete-icon", onClick: function () { return onDelete(scheduledEmail); } }),
                React.createElement(Bubble, { className: "bubble-primary", alignPoints: ICON_TOOLTIP_ALIGN_POINTS },
                    React.createElement(FormattedMessage, { id: "dialogs.schedule.management.delete" })))),
        React.createElement("div", { className: "gd-scheduled-email-content" },
            React.createElement("div", { className: "gd-scheduled-email-icon" },
                React.createElement(AttachmentIcon, { color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5 })),
            React.createElement("div", { className: "gd-scheduled-email-text-content" },
                React.createElement("div", { className: "gd-scheduled-email-title" },
                    React.createElement("strong", null,
                        React.createElement(ShortenedText, { className: "gd-scheduled-email-shortened-text", tooltipAlignPoints: TEXT_TOOLTIP_ALIGN_POINTS }, subject))),
                React.createElement("div", null,
                    React.createElement("span", { className: "gd-scheduled-email-subtitle" },
                        React.createElement(ShortenedText, { className: "gd-scheduled-email-shortened-text", tooltipAlignPoints: TEXT_TOOLTIP_ALIGN_POINTS }, subtitle)))))));
};
//# sourceMappingURL=ScheduledEmail.js.map